name: 联通

on:
  workflow_dispatch: # 手动触发
  schedule: # 计划任务触发
#    - cron: '*/30 20-23,0-18 * * *' # cron表达式，Actions时区是UTC时间，所以要往前推8个小时(4-23)
    - cron: '30 * * * *'

jobs:
  daily-task:
    if: github.event.repository.owner.id == github.event.sender.id

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12]
        node-registry: ['https://registry.npmjs.org']

    steps:
    
    # 检出
    - name: Checkout
      uses: actions/checkout@v2
      
    # 设置服务器时区为东八区 
    - name: Timezone CST +8
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: ${{ matrix.node-registry }}

    - name: Get npm cache directory
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - name: restore npm cache
      uses: actions/cache@v2
      id: use-npm-cache
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - name: restore npm dependencies
      uses: actions/cache@v2
      id: use-npm-depends
      with:
        path: |
          node_modules
          */*/node_modules
        key: ${{ runner.os }}-depends-${{ hashFiles('**/package-lock.json') }}

    - name: restore task cache
      uses: actions/cache@v2
      id: use-task-cache
      with:
        path: |
          /home/runner/.AutoSignMachine
        key: ${{ runner.os }}-task-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.use-npm-cache.outputs.cache-hit != 'true' || steps.use-npm-depends.outputs.cache-hit != 'true'
      run: npm install

    # 运行 unicom 签到任务
    - name: Run unicom daily task
      env:
        user: ${{secrets.unicom_user}}
        password: ${{secrets.unicom_password}}
        user2: ${{secrets.unicom_user2}}
        password2: ${{secrets.unicom_password2}}        
        user3: ${{secrets.unicom_user3}}
        password3: ${{secrets.unicom_password2}}        
        user4: ${{secrets.unicom_user4}}
        password4: ${{secrets.unicom_password2}}
        user5: ${{secrets.unicom_user5}}
        password5: ${{secrets.unicom_password5}}
        appid: ${{secrets.unicom_appid}}
      run: node index.js unicom --accountSn=1,2,3,4,5 --user-1=${user} --password-1=${password} --appid-1=${appid} --user-2=${user2} --password-2=${password2} --appid-2=${appid} --user-3=${user3} --password-3=${password2} --appid-3=${appid} --user-4=${user4} --password-4=${password2} --appid-4=${appid} --user-5=${user5} --password-5=${password5} --appid-5=${appid}
